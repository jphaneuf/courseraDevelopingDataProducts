(165)
set.seed(165)
simVector <- vector()
for(1:1000) vector<-c(vector,mean(rexp(40,.2)))
set.seed(165)
simVector <- vector()
for(1:1000) {vector<-c(vector,mean(rexp(40,.2)))}
for(i in 1:10) print(i)
set.seed(165)
simVector <- vector()
for(i in 1:1000) {vector<-c(vector,mean(rexp(40,.2)))}
plot(simVector)
head(simVector)
set.seed(165)
simVector <- vector()
for(i in 1:1000) {simVector<-c(vector,mean(rexp(40,.2)))}
plot(simVector)
head(simVector)
plot(1:length(simVector),simVector)
typeof(simVector)
set.seed(165)
simVector <- vector()
for(i in 1:1000) {simVector<-c(simVector,mean(rexp(40,.2)))}
plot(simVector)
barplot(simVector)
barplot(rexp(40,.2))
barplot(rexp(1000,.2))
1/.2
mean(simVector)
source('~/.active-rstudio-document', echo=TRUE)
g<-ggplot(ToothGrowth,aes(factor(supp),len))+geom_boxplot()
g
g<-ggplot(ToothGrowth,aes(factor(dose),len))+geom_boxplot()
g
g<-ggplot(ToothGrowth,aes(factor(supp),len))+geom_boxplot()
g
g<-ggplot(ToothGrowth,aes(factor(dose),len))+geom_boxplot()
g
g<-ggplot(ToothGrowth,aes(factor(supp),len))+geom_boxplot()
g
g<-ggplot(ToothGrowth,aes(factor(supp),len))+geom_boxplot()
g
g<-ggplot(ToothGrowth,aes(factor(dose),len))+geom_boxplot()
g
g<-ggplot(ToothGrowth,aes(factor(supp),len))+geom_boxplot()
g
?t.test
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
mean(acid)
mean(ph)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
t.test(rnorm(100,0,1),rnorm(100,20,1))
with(phdf,t.test(sph~soil))
phdf <- data.frame(cbind(soil,sph))
with(phdf,t.test(sph~soil))
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
g<-ggplot(ToothGrowth,aes(factor(supp),len))+geom_boxplot()
g
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
levels(factor(ToothGrowth$dose))
0!=1
ToothGrowthTest <- ToothGrowth[ToothGrowth$dose != 1]
head(ToothGrowth)
ToothGrowthTest <- ToothGrowth[ToothGrowth$dose != 1,]
ToothGrowthTest
t.test(ToothGrowthTest$len~ToothGrowthTest$dose)
t.test(ToothGrowthTest$len~ToothGrowthTest$dose,alternative="greater")
t.test(ToothGrowthTest$len~ToothGrowthTest$dose,alternative="less")
t.test(ToothGrowthTest$len~ToothGrowthTest$dose,alternative="t")
t.test(ToothGrowthTest$len~ToothGrowthTest$dose,alternative="less")
?t.test
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
?qt
qt(.975)
qt(.975,8)
qnorm(.975)
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
?qbinom
qbinom(2,4,.5)
qbinom(.75,4,.5)
qbinom(.5,4,.5)
pbinom(2,4,.5)
plot(1:100,rbinom(100,2,.5))
?pbinom
pbinom(.5,4,.5)
pbinom(2,4,.5)
pbinom(4,4,.5)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
choose(4, 3) * 0.5^4 + choose(4, 4) * 0.5^4
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
ppois(10/1797,.01)
?ppois
source('~/knowledge/datascience/inference/qz3.R', echo=TRUE)
?t.test
?pt
q5t = qt(.95,16)
q5sp = sqrt((1.5^2+1.8^2)/2)
q5high = (-3-1)+q5t*q5sp*sqrt(2/9)
q5low = (-3-1)-q5t*q5sp*sqrt(2/9)
pnorm(-q5t*q5sp*sqrt(2/9),lower.tail=TRUE)
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
q5t
source('~/.active-rstudio-document', echo=TRUE)
q5t
pt(q5t,16)
pt(q5t,2)
pt(q5t,16)
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
q5t
q5sp
-4/1.65
pnorm(-2.42)
?power.t.test
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
pnorm(.95)
qnorm(.95)
qnorm(.95,lower.tail=FALSE)
qnorm(.95)
?qnorm
qnorm(.95)
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
power
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
source('~/.active-rstudio-document', echo=TRUE)
4/9
(4/9)*.15
source('~/knowledge/datascience/inference/q4.R', echo=TRUE)
q5t = -4/sqrt((1.5^2+1.8^2)/9)
q5t
q5t = -4/(sqrt((1.5^2+1.8^2)/9)/sqrt(18))
q5t
?t.test
pt(-5,16)
pnorm(-5)
q7t = qt(.95,16)
q7sp = sqrt((1.5^2+1.8^2)/2)
q7high = (-3-1)+q7t*q7sp*sqrt(2/9)
q7low = (-3-1)-q7t*q7sp*sqrt(2/9)
q7low
q7high
ubrain <- 1100
brainsd<- 30
brainn <- 9
#H0 u = u0
1100+c(-1,1)*brainsd*qt(.975,8)/sqrt(brainn)
library(caret)
install.packages("caret")
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
install.packages("AppliedPredictiveModeling")
library(caret)
library(AppliedPredictiveModeling)
data(concrete)
set.seed(975)
head(mixtures)
?createDataPartition
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
inTrain
inTrain[[1]]
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
training
testing
plot(training$CompressiveStrength)
?melt
head(mtcars)
x<- melt(cyl~mpg,data=mtcars)
library(reshape)
x<- melt(cyl~mpg,data=mtcars)
?melt
library(reshape2)
?melt
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
head(tmelt)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
?geom
??geom
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
g <- ggplot(tmelt,aes(CompressiveStrength))
g<- g+facet_grid(variable~.)+geom_point()
print(g)
g <- ggplot(tmelt,aes(CompressiveStrength))
print(g)
g <- ggplot(tmelt,aes(CompressiveStrength))+geom_point()
#g<- g+facet_grid(variable~.)+geom_point()
print(g)
?qplot
qplot(CompressiveStrength,data=tmelt)
?qplot
head(tmelt)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
with(tmelt,plot(1:length(CompressiveStrength),CompressiveStrength))
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
head(training)
install.packages("Hmisc")
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
plotNames
plotNames[-c("CompressiveStrength")]
plotNames[-which(plotNames=="CompressiveStrength")]
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
plotNames
?cut2
cut2(1:100,10)
cut2(1:100,g=10)
cut2(1:100,g=10)[1]
cut2(rnorm(100),g=10)
x<-rnorm(100)
plot(x)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
z<-"CompressiveStrength"
training[,c(z)]
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
qplot(training$SuperPlasticizer)
hist(training$SuperPlasticizer
)
summary(training$SuperPlasticizer)
training$SuperPlasticizer
summary(training)
hist(training$Superplasticizer)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2.R', echo=TRUE)
hist(training$Superplasticizer)
table(training$Superplasticizer==0)
log10(training$Superplasticizer)
hist(log10(training$Superplasticizer))
table(training$Superplasticizer<0)
table(training$Superplasticizer==0)
table(training$Superplasticizer>0)
#Q2
library(caret)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
set.seed(3433)
adData <- data.frame(diagnosis,predictors)
?preProcess
z<-c("hello","world","glhello","glworld")
substring(z,1,2)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q4.R', echo=TRUE)
pvils
?pca
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q4.R', echo=TRUE)
pcobject
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
head(adData)
head(diagnosis)
head(predictors)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
head(trpc)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
pvils
source('~/.active-rstudio-document', echo=TRUE)
?combn
?lm
lm(training$diagnosis~training[pvils])
training[,pvils]
lm(training$diagnosis~training[,pvils])
training$diganosis
training$diagnosis
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
?preProcess
?glm
glm(cyl~wt,data=mtcars)
glm(cyl~.,data=mtcars)
lm(cyl~.,data=mtcars)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
trlm<-cbind(trpc,dgns=training$diagnosis)
head(trlm)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
glm(cyl~.,data=mtcars)
lm(cyl~.,data=mtcars)
glm(cyl~.,data=mtcars)
?glm
head(trlm)
as.numeric(dgns)
as.numeric(trlm$dgns)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
basicModel
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
?preProcess
?preprocess
?preProcess
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
pcpredict
?train
modelFit <- train(trlm$diganosis ~ .,method="glm",preProcess="pca",data=trlm)
modelFit <- train(trlm$diagnosis ~ .,method="glm",preProcess="pca",data=trlm)
modelFit <- train(trlm$dgns ~ .,method="glm",preProcess="pca",data=trlm)
modelFit <- train(trlm$dgns ~ .,method="glm",data=trlm,preProcess="pca")
modelFit <- train(trlm$dgns ~ .,method="glm",data=trlm,preProcess="pca",thresh=.8)
?train
?confusionMatrix
?train
source('~/knowledge/datascience/machinelearning/quiz2/index.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/index.R', echo=TRUE)
install.packages("e1071")
source('~/knowledge/datascience/machinelearning/quiz2/index.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz2/index.R', echo=TRUE)
head(spam)
head(spam[58])
?spam
?predict
preProc <- preProcess(trpc,method="pca",thresh=.8)
trainPC <- predict(preProc,trpc)
head(training)
#Q2
library(caret)
library(AppliedPredictiveModeling)
data(AlzheimerDisease)
set.seed(3433)
adData <- data.frame(diagnosis,predictors)
inTrain <- createDataPartition(adData$diagnosis,p=3/4,list=FALSE)
training <- adData[inTrain,]
testing <- adData[-inTrain,]
pvils <- names(adData)[substring(names(adData),1,2)=="IL"]#principal vector starting in IL
trpc <-training[pvils]
tstpc <-testing[pvils]
#trlm<-cbind(trpc,dgns=as.numeric(training$diagnosis))
## Preprocessing with PCA
preProc <- preProcess(trpc,method="pca",thresh=.8)
trainPC <- predict(preProc,trpc)
head(training)
preProc <- preProcess(trpc,method="pca",thresh=.8)
trainPC <- predict(preProc,trpc)
modelFit <- train(training$diganosis ~ .,method="glm",data=trainPC)
modelFit <- train(training$diagnosis ~ .,method="glm",data=trainPC)
source('~/knowledge/datascience/machinelearning/quiz2/quiz2q5.R', echo=TRUE)
testPC <- predict(preProc,tstpc)
confusionMatrix(testing$diagnosis,predict(modelFit,testPC))
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q1.R', echo=TRUE)
?CART
head(segmentationOriginal)
source('~/.active-rstudio-document', echo=TRUE)
so$Case
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q1.R', echo=TRUE)
trainIndex
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q1.R', echo=TRUE)
?appliedPredictiveModeling
?AppliedPredictiveModeling
?train
names(getModelInfo())
head(soTest)
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q1.R', echo=TRUE)
tobj
printcp(tobj)
tobj$finalModel
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q3.R', echo=TRUE)
library("pgmm")
install.packages("pgmm")
?tree
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q3.R', echo=TRUE)
?tree
?dim
?train
names(getModelInfo())
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q3.R', echo=TRUE)
qnd
olive
head(olive)
head(olive,n=20)
olive[200:210]
olive[200:210,]
table(olive$Area)
?olive
str(olive$Area)
library(ElemStatLearn)
data(SAheart)
install.packages("ElemStatLearn")
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q4.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q4.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q4.R', echo=TRUE)
head(trainSA)
?SAheart
?confusionMatrix
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q4.R', echo=TRUE)
?SAheart
head(trainSA)
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q4.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q4.R', echo=TRUE)
?train
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q4.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q4.R', echo=TRUE)
predict(tobj,newdata=trainSA)
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q4.R', echo=TRUE)
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q4.R', echo=TRUE)
library(ElemStatLearn)
data(vowel.train)
data(vowel.test)
vowel.train$y
vtrain <- vowel.train
vtest <- vowel.test
vtrain.y <- factor(vtrain.y)
vtest.y<- factor(vtest.y)
source('~/knowledge/datascience/machinelearning/quiz3/mlq3q5.R', echo=TRUE)
vtrain <- vowel.train
vtest <- vowel.test
vtrain$y <- factor(vtrain$y)
vtest$y<- factor(vtest$y)
head(mtcars)
mtDf <- mtcars
mtDf$mpg <- factor(round(mtDf$mpg))
mtDf <- aggregate(am~mpg,data=mtDf,FUN=mean)
mtDf
mtDf <- mtcars
mtDf$mpg <- factor(round(mtDf$mpg))
mtDf <- aggregate(mpg~am,data=mtDf,FUN=mean)
mtDf <- mtcars
mtDf <- aggregate(mpg~am,data=mtDf,FUN=mean)
mtDf
fit <- (mpg~am,data=mtcars)
fit <- lm(mpg~am,data=mtcars)
fit
?mtcars
source('~/knowledge/datascience/regression/courseraRegressionProject/regressionEda.R', echo=TRUE)
amFit$finalModel
summary(amFit)
?ggplot
library(ggplot2)
library(caret)
g<- ggplot(data=mtcars,aes(x=wt,y=mpg))
g<- g+geom_point()
print(g)
source('~/knowledge/datascience/regression/courseraRegressionProject/regressionEda.R', echo=TRUE)
mtcars$am
?mtcars
?usingR
setwd("~/knowledge/datascience/developingdataproducts/quiz1")
runApp()
library(shiny)
runApp()
setwd("~/knowledge/datascience/developingdataproducts/courseraDevelopingDataProducts")
runApp()
runApp()
runApp()
runApp()
setwd("~/knowledge/datascience/developingdataproducts/courseraDevelopingDataProducts")
?sliderInput
?sliderInput
setwd("~/knowledge/datascience/developingdataproducts/courseraDevelopingDataProducts")
runApp()
runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?shiny
?verbatimeTextOutput
?verbatimTextOutput
?sliderInput
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
?renderPlot
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
